@import url('meta');
@import url('color');
@import url('media');

@{NS}.input {
    display: table;
    position: relative;
    overflow: hidden;
    vertical-align: middle;
    .button, button {
        margin: auto;
        width: 100%;
        border-radius: 0;
        margin-right: 0;
    }

    >.action, input {
        display: table-cell;
        vertical-align: bottom;
    }
    >.action>.button, >.action>button {
        margin: auto;
        width: 100%;
        display: block;
        border-radius: inherit;
    }
    input, textarea {
        width: 100%;
    }

    >:first-child {
        border-top-left-radius: @radius;
        border-bottom-left-radius: @radius;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }
    >:last-child {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        border-top-right-radius: @radius;
        border-bottom-right-radius: @radius;
    }
    &.fluid {
        width: 100%;
        >.action {
            width: 5em;
        }
    }
    &.icon>input {
        border-radius: @radius;
    }
    .icon {
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        right: initial;
    }
    input+.icon{
        left: initial;
        right: 0;
    }
}

._INPUT_SIZE(@size, @_pd){
    @_padding: @padding * @_pd / 10;
    @_lh: @line_height * @size / 15;
    @_border_radius: @line_height * @size / 15 + @padding * @_pd / 10;
    .button, input, button {
        font-size: @_lh;
        padding: @_padding;
        line-height: @_lh;
        height: @_lh + @_padding * 2 + 2px;
        overflow: hidden;
    }

    &.icon {
        &.fluid {
            display: block;
        }
        input {
            padding-left: @_padding;
            padding-right: @_padding * 2 + @_lh + 4px;
        }

        .icon + input {
            padding-left: @_padding * 2 + @_lh + 4px;
            padding-right: @_padding;
        }

    }

    .icon {
        /*add two border, two padding, lin-height*/
        cursor: pointer;
        width: @_padding * 2 + @_lh + 2px;
        text-align: center;
        line-height: @_padding * 2 + @_lh + 2px;
        font-size: @_lh + 2px;
    }

    &.round {
        >:first-child {
            border-top-left-radius: @_border_radius;
            border-bottom-left-radius: @_border_radius;
        }
        >:last-child {
            border-top-right-radius: @_border_radius;
            border-bottom-right-radius: @_border_radius;
        }
    }
}

@{NS} input, @{NS}.input, @{NS} textarea {
    vertical-align: middle;
    -webkit-transition: all .3s;
    -o-transition: all .3s;
    transition: all .3s;

    &:focus, &.focus {
        border-color: @light_blue;
    }

    &.angled {
        border-radius: 0;
    }

    &.fluid {
        width: 100%;
    }
    
    ._INPUT_SIZE(14, 7);
    &.tiny {
        ._INPUT_SIZE(10, 5);
    }
    &.small {
        ._INPUT_SIZE(12, 6);
    }
    &.large {
        ._INPUT_SIZE(18, 9);
    }
    &.huge {
        ._INPUT_SIZE(22, 11);
    }
    
    &.disabled {
        disabled: disabled;
        cursor: not-allowed;
        pointer-events: none;
        border-color: @light_gray;
        background-color: @mini_gray;
        opacity: .85;
    }
    &.error {
        border-color: @red;
    }
}

@media @desktop_view, @tablet_view {
    @{NS} textarea, @{NS} input, input@{NS}.input {
        min-width: 400px;
    }
}

@media @mobile_view {
    @{NS} textarea, @{NS} input, input@{NS}.input {
        min-width: 250px;
    }
}