.make-columns(@n, @i: 1) when (@i =< @n) {
    &.grid-@{i} {
        >.row>.column {
            width: 100% / @i;
        }
        >.column {
            width: 100% / @i;
        }
    }
    .make-columns(@n, (@i + 1));
}

.make-wide-columns(@n, @i: 1) when (@i =< @n) {
    >.column.column-@{i} {
        width: (@i / @column_count) * 100%;
    }
    >.row {
        >.column.column-@{i} {
            width: (@i / @column_count) * 100%;
        }
    }
    .make-wide-columns(@n, (@i + 1));
}

.make-row-column(@n, @i: 1) when (@i =< @n) {
    &.column-@{i} {
        >.column {
            width: 100% / @i;
        }
    }
    .make-row-column(@n, (@i + 1));
}

@{NS}.grid {
    overflow: hidden;
    position: relative;
    margin: 0;
    padding: 0;
    >.column {
        float: left;
    }
    >.row {
        display: block;
        overflow: hidden;
        >.column {
            float: left;
        }
    }
    .make-wide-columns(@column_count);
    .make-columns(@column_count);
    >.row {
        .make-row-column(@column_count);
    }
}
